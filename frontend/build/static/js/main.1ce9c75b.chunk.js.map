{"version":3,"sources":["store/types/authType.js","store/actions/authAction.js","components/ForgotPassword.jsx","components/Login.jsx","components/Friends.jsx","components/FriendInfo.jsx","components/Message.jsx","components/MessageSend.jsx","components/RightSide.jsx","store/types/messengerType.js","store/actions/messengerAction.js","audio/notification.mp3","audio/sending.mp3","components/Messenger.jsx","components/ProtectedRoute.jsx","components/Register.jsx","App.js","store/reducers/authReducer.js","store/reducers/messengerReducer.js","store/index.js","index.js"],"names":["REGISTER_FAIL","REGISTER_SUCCESS","SUCCESS_MESSAGE_CLEAR","ERROR_CLEAR","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","LOGOUT_SUCCESS","clearErrors","dispatch","a","type","ForgotPassword","useDispatch","useState","email","state","setState","alert","useAlert","useSelector","auth","error","message","navigate","useNavigate","useEffect","console","log","className","onSubmit","e","data","preventDefault","config","headers","axios","post","response","payload","action","htmlFor","placeholder","required","name","value","onChange","target","Login","authenticate","loading","successMessage","myInfo","password","inputHandle","success","map","err","localStorage","setItem","token","id","to","Friends","props","friend","frndInfo","msgInfo","activeUser","myId","src","image","alt","length","some","u","userId","_id","senderId","undefined","status","userName","text","slice","moment","createdAt","startOf","fromNow","FriendInfo","currentFriend","handleClick","onClick","usr","msg","index","Message","scrollRef","typingMessage","openImage","setOpenImage","m","ref","MessageSend","newMessage","sendMessage","sendEmoji","sendImage","RightSide","openModal","setOpenModal","setTimeout","FRIEND_GET_SUCCESS","GET_MESSAGE_SUCCESS","SEND_MESSAGE_SUCCESS","SOCKET_MESSAGE","UPDATE_FRIEND_MESSAGE","CLEAR_MESSAGE","SEEN_MESSAGE","DELIVERED_MESSAGE","UPDATE","SEEN_ALL","GET_THEME_SUCCESS","SET_THEME_SUCCESS","seenMessage","setTheme","theme","Messenger","useSound","notificationSound","notificationSPlay","sending","sendingSPlay","useRef","socket","setCurrentFriend","hide","setHide","setNewMessage","socketMessage","setSocketMessage","setTypingMessage","setActiveUser","messenger","friends","messageSendSuccess","message_get_success","themeMode","current","io","on","receiverId","emit","users","filterUser","filter","toast","senderName","put","get","scrollIntoView","behavior","getItem","position","reverseOrder","toastOptions","style","fontSize","removeItem","getFriendClass","document","getElementsByClassName","frienNameClass","i","innerText","toLowerCase","indexOf","display","fd","messageSend","emo","files","imageName","newImageName","Date","now","time","formData","FormData","append","ProtectedRoute","children","Register","confirmPassword","imagePreview","setImagePreview","inputHandler","errorMessage","reader","FileReader","onload","result","readAsDataURL","App","path","element","authState","tokenDecode","tokenDecoded","deCodeToken","expTime","exp","getToken","getInfo","messengerState","rootReducer","combineReducers","findIndex","f","middleware","thunkMiddleware","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","options","timeout","positions","BOTTOM_CENTER","transitions","SCALE","ReactDOM","render","StrictMode","template","alertTemplate","getElementById"],"mappings":"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","file":"static/js/main.1ce9c75b.chunk.js","sourcesContent":["export const REGISTER_FAIL = 'REGISTER_FAIL'\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\r\nexport const SUCCESS_MESSAGE_CLEAR = 'SUCCESS_MESSAGE_CLEAR'\r\nexport const ERROR_CLEAR = 'ERROR_CLEAR'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\r\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS'\r\nexport const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL'\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS'\r\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL'","import axios from \"axios\";\r\nimport {\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_SUCCESS,\r\n  LOGOUT_SUCCESS,\r\n  FORGOT_PASSWORD_SUCCESS,\r\n  FORGOT_PASSWORD_FAIL,\r\n  ERROR_CLEAR,\r\n  RESET_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_FAIL,\r\n} from \"../types/authType\";\r\n\r\nexport const userRegister = (data) => {\r\n  return async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const response = await axios.post(\r\n        \"/api/messenger/user-register\",\r\n        data,\r\n        config\r\n      );\r\n      localStorage.setItem(\"authToken\", response.data.token);\r\n\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: {\r\n          successMessage: response.data.successMessage,\r\n          token: response.data.token,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n        payload: {\r\n          error: error.response.data.error.errorMessage,\r\n        },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const userLogin = (data) => {\r\n  return async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const response = await axios.post(\r\n        \"/api/messenger/user-login\",\r\n        data,\r\n        config\r\n      );\r\n      localStorage.setItem(\"authToken\", response.data.token);\r\n\r\n      dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: {\r\n          successMessage: response.data.successMessage,\r\n          token: response.data.token,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_LOGIN_FAIL,\r\n        payload: {\r\n          error: error.response.data.error,\r\n        },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const forgotPassword = (data) => {\r\n  return async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n  try {\r\n    const response = await axios.post(`/api/messenger/password/forgot-password`, data, config);\r\n    dispatch({\r\n      type: FORGOT_PASSWORD_SUCCESS,\r\n      payload : response.data.message\r\n    })\r\n    console.log(response)\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FORGOT_PASSWORD_FAIL,\r\n      payload: error.response.data\r\n    })\r\n  }}\r\n}\r\n\r\nexport const resetPassword = (token, passwords) => async (dispatch) => {\r\n  try {\r\n    //dispatch({type: RESET_PASSWORD_REQUEST});\r\n    const config = { headers: \r\n    {\"Content-Type\" : \"application/json\"}}\r\n    const response = await axios.put(`/api/messenger/password/reset/${token}`, passwords, config);\r\n    dispatch({\r\n      type: RESET_PASSWORD_SUCCESS, payload: response.data.success\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: RESET_PASSWORD_FAIL, \r\n      payload: error.response.data.error\r\n    })\r\n  }\r\n}\r\n\r\nexport const userLogout = () => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post(`/api/messenger/user-logout`);\r\n    if (response.data.success){\r\n      localStorage.removeItem('authToken');\r\n      dispatch({\r\n        type : LOGOUT_SUCCESS\r\n      })\r\n    }\r\n  } catch (error) {}\r\n};\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({type: ERROR_CLEAR});\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearErrors, forgotPassword } from \"../store/actions/authAction\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ForgotPassword = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = useState({email: ''})\r\n  const alert = useAlert;\r\n\r\n  const inputHandle = (e) => {\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n\r\n  const {error, message} = useSelector(state=> state.auth);\r\n  const navigate = useNavigate();\r\n\r\n  const forgotPasswordSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(forgotPassword(state));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error){\r\n        console.log(error)\r\n        dispatch(clearErrors());\r\n    }\r\n    if (message){\r\n        console.log(message)\r\n        navigate('/');\r\n    }\r\n    \r\n  }, [dispatch, error, alert, message]);\r\n\r\n  return (\r\n    <div className=\"forgot-password\">\r\n      <h2>Forgot Password</h2>\r\n\r\n      <form className=\"form-group\" onSubmit={forgotPasswordSubmit} action=\"\">\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"email\">Email: </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            placeholder=\"email\"\r\n            required\r\n            name=\"email\"\r\n            value={state.email}\r\n            onChange={inputHandle}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"submit\" value=\"Send\" className=\"btn\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { userLogin } from \"../store/actions/authAction\";\r\nimport { ERROR_CLEAR, SUCCESS_MESSAGE_CLEAR } from \"../store/types/authType\";\r\nimport ForgotPassword from \"./ForgotPassword\";\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  const { loading, authenticate, error, successMessage, myInfo } = useSelector(\r\n    (state) => state.auth\r\n  );\r\n\r\n  const [state, setState] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const inputHandle = (e) => {\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(userLogin(state));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (authenticate) {\r\n      navigate(\"/\");\r\n    }\r\n    if (successMessage) {\r\n      alert.success(successMessage);\r\n      dispatch({ type: SUCCESS_MESSAGE_CLEAR });\r\n    }\r\n    if (error) {\r\n      error.map((err) => alert.error(err));\r\n      dispatch({ type: ERROR_CLEAR });\r\n    }\r\n  }, [successMessage, error]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"register\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h3>Login</h3>\r\n          </div>\r\n          \r\n          <div className=\"card-body\">\r\n            <form action=\"\" onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  value={state.email}\r\n                  onChange={inputHandle}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  value={state.password}\r\n                  onChange={inputHandle}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <input type=\"submit\" className=\"btn\" value=\"login\" />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <span>\r\n                  {\" \"}\r\n                  {\r\n                    /**Forgot Password */\r\n                    error && (\r\n                      <>\r\n                        <Link to=\"/messenger/forgot-password\">\r\n                          Forgot Password\r\n                        </Link>\r\n                        <div>\r\n                          <ForgotPassword />\r\n                        </div>\r\n                      </>\r\n                    )\r\n                  }\r\n                  <Link to=\"/messenger/register\">Create an Account</Link>{\" \"}\r\n                </span>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { FaRegCheckCircle } from 'react-icons/fa';\r\n\r\nconst Friends = (props) => {\r\n  const {frndInfo,msgInfo} = props.friend;\r\n  const {activeUser} = props;\r\n  const myId = props.myId;\r\n  //console.log(frndInfo)\r\n  //console.log(activeUser);\r\n  return (\r\n    <div className='friend'>\r\n        <div className=\"friend-image\">\r\n            <div className=\"image\">\r\n            <img src={`./image/${frndInfo.image}`} alt=\"user\" />\r\n            \r\n              {\r\n                activeUser && activeUser.length > 0 && activeUser.some(u => u.userId === frndInfo._id) ? \r\n                <div className=\"active_icon\"></div>: ''\r\n              }\r\n            </div>\r\n            </div>\r\n        \r\n        <div className=\"friend-name-seen\">\r\n            <div className=\"friend-name\">\r\n                <h4 className={msgInfo?.senderId !== myId && \r\n                msgInfo?.status !== undefined && msgInfo.status !== 'seen' ?\r\n                'unseen_message fd_name': 'fd_name'}>{frndInfo.userName}</h4>\r\n\r\n                <div className=\"msg-time\">\r\n                  {\r\n                    msgInfo && msgInfo.senderId === myId ? <span>You</span> :\r\n                    <span className={msgInfo?.senderId !== myId && \r\n                      msgInfo?.status !== undefined && msgInfo.status !== 'seen' ?\r\n                      'unseen_message ': ''}>{frndInfo.userName + ' '}</span>\r\n                  }:\r\n                  {\r\n                    msgInfo && msgInfo.message.text ? <span className={msgInfo?.senderId !== myId && \r\n                      msgInfo?.status !== undefined && msgInfo.status !== 'seen' ?\r\n                      'unseen_message ': ''}>{msgInfo.message.text.length > 10 ?\r\n                       msgInfo.message.text.slice(0, 10) + '...' : msgInfo.message.text}</span>\r\n                    : msgInfo && msgInfo.message.image ? <span> Image sent</span>\r\n                    : <span>Is Connected</span>\r\n                  }\r\n                  <br></br><span> {msgInfo ? moment(msgInfo?.createdAt).startOf('minutes').fromNow() :  \r\n                  moment(msgInfo?.createdAt).startOf('minutes').fromNow()}</span>\r\n                </div>\r\n            </div>\r\n            {\r\n              myId === msgInfo?.senderId ?\r\n              <div className=\"seen-unseen-icon\">\r\n                {\r\n                  msgInfo.status === 'seen' ?\r\n                  <img src={`./image/${frndInfo.image}`} alt=\"user\" /> :\r\n                  msgInfo.status === 'delivered' ? \r\n                  <div className=\"delivered\">\r\n                    <FaRegCheckCircle/> </div> :\r\n                    <div className=\"unseen\">\r\n                      \r\n                    </div>\r\n                }\r\n              </div> : \r\n              <div className=\"seen-unseen-icon\">\r\n                {\r\n                  msgInfo?.status !== undefined && msgInfo?.status !== 'seen'? <div className=\"seen-icon\"> </div>: ''\r\n                }\r\n                \r\n              </div>\r\n            }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport { FaCaretSquareDown } from 'react-icons/fa';\r\n\r\nconst FriendInfo = ({currentFriend, activeUser, handleClick, message}) => {\r\n  return (\r\n    <div className='friend-info'>\r\n        <input type=\"checkbox\" id='gallery' />\r\n      <div className='image-name'>\r\n        <div className='image'>\r\n          <img onClick={handleClick} src={`/image/${currentFriend.image}`}alt='user' />\r\n        </div>\r\n\r\n        {activeUser &&\r\n                    activeUser.length > 0 &&\r\n                    activeUser.some(\r\n                      (usr) => usr.userId === currentFriend._id\r\n                    ) ? (\r\n                      <div className='active-user'>Active</div>\r\n                    ) : (\r\n                      <div className='inactive-user'>In-active</div>\r\n                    )}\r\n        \r\n        <div className='name'>\r\n          <h4>{currentFriend.userName}</h4>\r\n        </div>\r\n      </div>\r\n      <div className='others'>\r\n        <div className='custom-chat'>\r\n          <h3>Customise Chat</h3>\r\n          <FaCaretSquareDown/>\r\n        </div>\r\n        <div className='privacy'>\r\n          <h3>Privacy and Support</h3>\r\n          <FaCaretSquareDown/>\r\n        </div>\r\n        <div className='media'>\r\n          <h3>Shared Media</h3>\r\n          <label htmlFor=\"gallery\"><FaCaretSquareDown/></label> \r\n        </div>\r\n      </div>\r\n      <div className=\"gallery\">\r\n      {\r\n        message && message.length > 0 ? message.map((msg, index)=>\r\n          msg.message.image && <img key={index} src={`./image/${msg.message.image}`} />\r\n        ) : <div className='no-media'> No media </div>\r\n      }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendInfo;\r\n","import moment from \"moment\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FaRegCheckCircle } from \"react-icons/fa\";\r\n\r\nconst Message = ({ message, currentFriend, scrollRef, typingMessage }) => {\r\n  const { myInfo } = useSelector((state) => state.auth);\r\n\r\n  const [openImage, setOpenImage] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"message-show\">\r\n        {message && message.length > 0 ? (\r\n          message.map((m, index) =>\r\n            m.senderId === myInfo.id ? (\r\n              <div ref={scrollRef} className=\"my-message\">\r\n                <div className=\"image-message\">\r\n                  <div className=\"my-text\" key={message._id}>\r\n                    <p className=\"message-text\">\r\n                      {/*Opening current chat image */}\r\n                      {openImage && (\r\n                        <img\r\n                          className=\"avatar\"\r\n                          src={`/image/${m.message.image[0]}`}\r\n                          alt=\"\"\r\n                        />\r\n                      )}\r\n\r\n                      {m.message.text === \"\" ? (\r\n                        <img\r\n                          onClick={() => setOpenImage(!openImage)}\r\n                          src={`./image/${m.message.image}`}\r\n                        />\r\n                      ) : (\r\n                        m.message.text\r\n                      )}\r\n                    </p>\r\n                    {index === message.length - 1 &&\r\n                    m.senderId === myInfo.id ? (\r\n                      m.status === \"seen\" ? (\r\n                        <img\r\n                          className=\"img\"\r\n                          src={`/image/${currentFriend.image}`}\r\n                          alt=\"user\"\r\n                        />\r\n                      ) : m.status === \"delivered\" ? (\r\n                        <span>\r\n                          {\" \"}\r\n                          <FaRegCheckCircle />{\" \"}\r\n                        </span>\r\n                      ) : (\r\n                        <span>\r\n                          <FaRegCheckCircle />\r\n                        </span>\r\n                      )\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"time\">\r\n                  {moment(m.createdAt).startOf(\"mini\").fromNow()}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"fd-message\" key={message._id} ref={scrollRef}>\r\n                <div className=\"image-message-time\">\r\n                  <img src={`/image/${currentFriend.image}`} alt=\"user\" />\r\n                  <div className=\"message-time\">\r\n                    <div className=\"fd-text\">\r\n                      <p className=\"fd-message-text message-text\">\r\n                        {m.message.text === \"\" ? (\r\n                          <img src={`./image/${m.message.image}`} />\r\n                        ) : (\r\n                          m.message.text\r\n                        )}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"time\">\r\n                      {moment(m.createdAt).startOf(\"mini\").fromNow()}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          )\r\n        ) : (\r\n          <div className=\"friend_connect\">\r\n            <img src={`/image/${currentFriend.image}`} alt=\"user\" />\r\n            <h3>Connected to {currentFriend.userName}</h3>\r\n            <span>\r\n              {\" \"}\r\n              {moment(currentFriend.createdAt).startOf(\"mini\").fromNow()}\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {typingMessage &&\r\n      typingMessage.msg &&\r\n      typingMessage.senderId === currentFriend._id ? (\r\n        <div className=\"typing-message\">\r\n          <div className=\"fd-message\">\r\n            <div className=\"image-message-time\">\r\n              <img src={`/image/${currentFriend.image}`} alt=\"user\" />\r\n              <div className=\"message-time\">\r\n                <div className=\"fd-text\">\r\n                  <p className=\"time\">Typing...</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport {\r\n  FaFileImage,\r\n  FaGift,\r\n  FaPaperPlane,\r\n  FaPlusCircle,\r\n} from \"react-icons/fa\";\r\n\r\nconst MessageSend = ({inputHandle, newMessage, sendMessage, sendEmoji, sendImage}) => {\r\n  const emojis = [\r\n    \"😀\",\r\n    \"😄\",\r\n    \"😁\",\r\n    \"😆\",\r\n    \"😂\",\r\n    \"🤣\",\r\n    \"😊\",\r\n    \"😇\",\r\n    \"🙂\",\r\n    \"🙃\",\r\n    \"😉\",\r\n    \"😌\",\r\n    \"😍\",\r\n    \"😝\",\r\n    \"😜\",\r\n    \"🧐\",\r\n    \"🤓\",\r\n    \"😎\",\r\n    \"😕\",\r\n    \"🤑\",\r\n    \"🥴\",\r\n    \"😱\",\r\n  ];\r\n\r\n  return (\r\n    <div className=\"message-send-section\">\r\n        <input type=\"checkbox\" id=\"emoji\"/>\r\n      <div className=\"file hover-attachment\">\r\n        <div className=\"add-attachment\">Add Attachment</div>\r\n        <FaPlusCircle />\r\n      </div>\r\n      <div className=\"file hover-image\">\r\n        <div className=\"add-image\">Add Image</div>\r\n        <input type=\"file\" onChange={sendImage} id=\"pic\" className=\"form-control\"/>\r\n        <label htmlFor=\"pic\">\r\n          <FaFileImage />\r\n        </label>\r\n      </div>\r\n      <div className=\"file hover-gift\">\r\n        <div className=\"add-gift\">Add gift</div>\r\n        <FaGift />\r\n      </div>\r\n      <div className=\"message-type\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"message\"\r\n          id=\"message\"\r\n          placeholder=\"Aa\"\r\n          onChange={inputHandle}\r\n          className=\"form-control\"\r\n          value={newMessage}\r\n        />\r\n        <div className=\"file hover-gift\">\r\n          <label htmlFor=\"emoji\">\r\n            {\" \"}\r\n            ❤️{\" \"}\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div onClick={sendMessage } className=\"file\"><FaPaperPlane /></div>\r\n      <div className=\"emoji-section\">\r\n        <div className=\"emoji\">\r\n            {\r\n                emojis.map(e=> <span onClick={()=>sendEmoji(e) }>{e}</span>)\r\n            }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageSend;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { FaPhoneAlt, FaVideo, FaRocketchat } from \"react-icons/fa\";\r\nimport FriendInfo from \"./FriendInfo\";\r\nimport Message from \"./Message\";\r\nimport MessageSend from \"./MessageSend\";\r\n\r\nconst RightSide = ({\r\n  currentFriend,\r\n  inputHandle,\r\n  newMessage,\r\n  sendMessage,\r\n  message,\r\n  scrollRef,\r\n  sendEmoji,\r\n  sendImage,\r\n  activeUser,\r\n  typingMessage\r\n}) => {\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    setOpenModal(true);\r\n    setTimeout(() => {\r\n      setOpenModal(false)\r\n    }, 6000);\r\n  }; \r\n\r\n  return (\r\n    <div className=\"col-9\" >\r\n      <div className=\"right-side\">\r\n        <input type=\"checkbox\" id=\"dot\" />\r\n        <div className=\"row\">\r\n          <div className=\"col-8\">\r\n          {openModal && <img className=\"avatar\" src={`/image/${currentFriend.image}`} alt=\"\" />}\r\n            <div className=\"message-send-show\">\r\n              <div className=\"header\">\r\n                <div className=\"image-name\">\r\n                  <div className=\"image\">\r\n                    <img\r\n                      onClick={()=>setOpenModal(!openModal)}\r\n                      src={`/image/${currentFriend.image}`}\r\n                      alt=\"friendsDp\"\r\n                    />\r\n                    {activeUser &&\r\n                    activeUser.length > 0 &&\r\n                    activeUser.some(\r\n                      (usr) => usr.userId === currentFriend._id\r\n                    ) ? (\r\n                      <div className=\"active-icon\"></div>\r\n                    ) : (\r\n                      <div className=\"inactive-icon\"></div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"name\">\r\n                    <h3>{currentFriend.userName}</h3>\r\n                  </div>\r\n                </div>\r\n                <div className=\"icons\">\r\n                  <div className=\"icon\">\r\n                    <FaPhoneAlt />\r\n                  </div>\r\n                  <div className=\"icon\">\r\n                    <FaVideo />\r\n                  </div>\r\n                  <div className=\"icon\">\r\n                    <label htmlFor=\"dot\">\r\n                      {\" \"}\r\n                      <FaRocketchat />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <Message\r\n                message={message}\r\n                scrollRef={scrollRef}\r\n                currentFriend={currentFriend}\r\n                typingMessage={typingMessage}\r\n              />\r\n              <MessageSend\r\n                inputHandle={inputHandle}\r\n                newMessage={newMessage}\r\n                sendMessage={sendMessage}\r\n                sendEmoji={sendEmoji}\r\n                sendImage={sendImage}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <FriendInfo message={message} handleClick={handleClick} currentFriend={currentFriend} activeUser={activeUser} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RightSide;\r\n","export const FRIEND_GET_SUCCESS = 'FRIEND_GET_SUCCESS';\r\nexport const GET_MESSAGE_SUCCESS = 'GET_MESSAGE_SUCCESS';\r\nexport const SEND_MESSAGE_SUCCESS = 'SEND_MESSAGE_SUCCESS';\r\nexport const SOCKET_MESSAGE = 'SOCKET_MESSAGE';\r\nexport const UPDATE_FRIEND_MESSAGE = 'UPDATE_FRIEND_MESSAGE';\r\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE';\r\nexport const SEEN_MESSAGE = 'SEEN_MESSAGE';\r\nexport const DELIVERED_MESSAGE = 'DELIVERED_MESSAGE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const SEEN_ALL = 'SEEN_ALL';\r\nexport const GET_THEME_SUCCESS = 'GET_THEME_SUCCESS';\r\nexport const SET_THEME_SUCCESS = 'SET_THEME_SUCCESS';\r\n","import axios from 'axios';\r\nimport { FRIEND_GET_SUCCESS, GET_MESSAGE_SUCCESS, GET_THEME_SUCCESS, SEND_MESSAGE_SUCCESS, SET_THEME_SUCCESS } from '../types/messengerType';\r\n\r\nexport const getFriends = () => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(`/api/messenger/get-friends`);\r\n        dispatch({type: FRIEND_GET_SUCCESS,\r\n        payload: {\r\n            friends: response.data.friends\r\n        }})\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const messageSend = (data) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.post(`/api/messenger/send-message`,data);\r\n        dispatch({\r\n            type: SEND_MESSAGE_SUCCESS,\r\n            payload: {\r\n                message: response.data.message\r\n            }\r\n        })\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const getMessage = (id) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(`/api/messenger/get-message/${id}`)\r\n        dispatch({\r\n            type: GET_MESSAGE_SUCCESS,\r\n            payload: {\r\n                message: response.data.message}\r\n        })\r\n    } catch (error) {\r\n        console.log(error.response.data)\r\n    }\r\n}\r\n\r\nexport const sendImages = (data) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.post(`/api/messenger/send-image-message`,data);\r\n        dispatch({\r\n            type: SEND_MESSAGE_SUCCESS,\r\n            payload : {\r\n                message: response.data.message\r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.log(error.response.data);\r\n    }\r\n}\r\n\r\nexport const seenMessage = (msg) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.post(`/api/messenger/seen-message`, msg);\r\n        console.log(response.data);\r\n    } catch (error) {\r\n        console.log(error.response.message)\r\n    }\r\n}\r\n\r\nexport const updateMessage = (msg) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.put(`/api/messenger/delivered-message`, msg);\r\n        console.log(response.data);\r\n    } catch (error) {\r\n        console.log(error.response.message)\r\n    }\r\n}\r\n\r\nexport const getTheme = () => async (dispatch) => {\r\n    const theme = localStorage.getItem('theme');\r\n    dispatch({\r\n        type: GET_THEME_SUCCESS,\r\n        payload: {\r\n            theme : theme? theme : 'white'\r\n        }\r\n    })\r\n}\r\n\r\nexport const setTheme = (theme) => async (dispatch) => {\r\n    localStorage.setItem('theme', theme);\r\n    dispatch({\r\n        type: SET_THEME_SUCCESS,\r\n        payload: {\r\n            theme : theme\r\n        }\r\n    })\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/notification.38a85dc7.mp3\";","export default __webpack_public_path__ + \"static/media/sending.bbed80de.mp3\";","import React, { useEffect, useRef } from \"react\";\r\nimport { FaEllipsisH, FaEdit, FaSistrix, FaSignOutAlt } from \"react-icons/fa\";\r\nimport ActiveFriend from \"./ActiveFriend\";\r\nimport Friends from \"./Friends\";\r\nimport RightSide from \"./RightSide\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getFriends,\r\n  messageSend,\r\n  getMessage,\r\n  sendImages,\r\n  seenMessage,\r\n  updateMessage,\r\n  getTheme,\r\n  setTheme,\r\n} from \"../store/actions/messengerAction\";\r\nimport { useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport {\r\n  CLEAR_MESSAGE,\r\n  DELIVERED_MESSAGE,\r\n  SEEN_ALL,\r\n  SEEN_MESSAGE,\r\n  SOCKET_MESSAGE,\r\n  UPDATE,\r\n  UPDATE_FRIEND_MESSAGE,\r\n} from \"../store/types/messengerType\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport useSound from \"use-sound\";\r\nimport notificationSound from \"../audio/notification.mp3\";\r\nimport sending from \"../audio/sending.mp3\";\r\nimport { userLogout } from \"../store/actions/authAction\";\r\n\r\nconst Messenger = () => {\r\n  const [notificationSPlay] = useSound(notificationSound);\r\n  const [sendingSPlay] = useSound(sending);\r\n\r\n  const scrollRef = useRef();\r\n  const socket = useRef();\r\n\r\n  const [currentFriend, setCurrentFriend] = useState(\"\");\r\n  const [hide, setHide] = useState(true);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [socketMessage, setSocketMessage] = useState(\"\");\r\n  const [typingMessage, setTypingMessage] = useState(\"\");\r\n  const [activeUser, setActiveUser] = useState([]);\r\n  const [imagePreview, setImagePreview] = useState();\r\n  //Preview Profile Photo\r\n\r\n  const {\r\n    friends,\r\n    message,\r\n    messageSendSuccess,\r\n    message_get_success,\r\n    themeMode,\r\n  } = useSelector((state) => state.messenger);\r\n\r\n  console.log(\r\n    friends,\r\n    message,\r\n    messageSendSuccess,\r\n    message_get_success,\r\n    themeMode\r\n  );\r\n  const { myInfo } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    socket.current = io(\"ws://localhost:8000\");\r\n    socket.current.on(\"getMessage\", (data) => {\r\n      setSocketMessage(data);\r\n    });\r\n    socket.current.on(\"getTypingMessage\", (data) => {\r\n      setTypingMessage(data);\r\n    });\r\n    socket.current.on(\"msgSeenResponse\", (msg) => {\r\n      dispatch({\r\n        type: SEEN_MESSAGE,\r\n        payload: {\r\n          msgInfo: msg,\r\n        },\r\n      });\r\n    });\r\n\r\n    socket.current.on(\"msgDeliveredResponse\", (msg) => {\r\n      dispatch({\r\n        type: DELIVERED_MESSAGE,\r\n        payload: {\r\n          msgInfo: msg,\r\n        },\r\n      });\r\n    });\r\n\r\n    socket.current.on(\"seenSuccess\", (data) => {\r\n      dispatch({\r\n        type: SEEN_ALL,\r\n        payload: data,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (socketMessage && currentFriend) {\r\n      if (\r\n        socketMessage.senderId === currentFriend._id &&\r\n        socketMessage.receiverId === myInfo.id\r\n      ) {\r\n        dispatch({\r\n          type: SOCKET_MESSAGE,\r\n          payload: {\r\n            message: socketMessage,\r\n          },\r\n        });\r\n        dispatch(seenMessage(socketMessage));\r\n        socket.current.emit(\"messageSeen\", socketMessage);\r\n        dispatch({\r\n          type: UPDATE_FRIEND_MESSAGE,\r\n          payload: {\r\n            msgInfo: socketMessage,\r\n            status: \"seen\",\r\n          },\r\n        });\r\n      }\r\n    }\r\n    setSocketMessage(\"\");\r\n  }, [socketMessage]);\r\n\r\n  useEffect(() => {\r\n    socket.current.emit(\"addUser\", myInfo.id, myInfo);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.current.on(\"getUser\", (users) => {\r\n      const filterUser = users.filter((usr) => usr.userId !== myInfo.id);\r\n      setActiveUser(filterUser);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      socketMessage &&\r\n      socketMessage.senderId !== currentFriend._id &&\r\n      socketMessage.receiverId === myInfo.id\r\n    ) {\r\n      notificationSPlay();\r\n      toast.success(`${socketMessage.senderName} sent a new Message`);\r\n      dispatch(updateMessage(socketMessage));\r\n      socket.current.emit(\"deliveredMessage\", socketMessage);\r\n      dispatch({\r\n        type: UPDATE_FRIEND_MESSAGE,\r\n        payload: {\r\n          msgInfo: socketMessage,\r\n          status: \"delivered\",\r\n        },\r\n      });\r\n    }\r\n  }, [socketMessage]);\r\n\r\n  const inputHandle = (e) => {\r\n    setNewMessage(e.target.value);\r\n\r\n    socket.current.emit(\"typingMessage\", {\r\n      senderId: myInfo.id,\r\n      receiverId: currentFriend._id,\r\n      msg: e.target.value,\r\n    });\r\n  };\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    sendingSPlay();\r\n    const data = {\r\n      senderName: myInfo.userName,\r\n      receiverId: currentFriend._id,\r\n      message: newMessage ? newMessage : \"❤️\",\r\n    };\r\n\r\n    socket.current.emit(\"typingMessage\", {\r\n      senderId: myInfo.id,\r\n      receiverId: currentFriend._id,\r\n      msg: \"\",\r\n    });\r\n    dispatch(messageSend(data));\r\n    setNewMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (messageSendSuccess) {\r\n      socket.current.emit(\"sendMessage\", message[message.length - 1]);\r\n      dispatch({\r\n        type: UPDATE_FRIEND_MESSAGE,\r\n        payload: {\r\n          msgInfo: message[message.length - 1],\r\n        },\r\n      });\r\n      dispatch({\r\n        type: CLEAR_MESSAGE,\r\n      });\r\n    }\r\n  }, [messageSendSuccess]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getFriends());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (friends && friends?.length > 0) {\r\n      setCurrentFriend(friends[0].frndInfo);\r\n    }\r\n  }, [friends]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getMessage(currentFriend._id));\r\n    if (friends?.length > 0) {\r\n    }\r\n  }, [currentFriend?._id]);\r\n\r\n  useEffect(() => {\r\n    if (message?.length > 0) {\r\n      if (\r\n        message[message.length - 1].senderId !== myInfo.id &&\r\n        message[message.length - 1].status !== \"seen\"\r\n      ) {\r\n        dispatch({\r\n          type: UPDATE,\r\n          payload: {\r\n            id: currentFriend._id,\r\n          },\r\n        });\r\n        socket.current.emit(\"seen\", {\r\n          senderId: currentFriend._id,\r\n          receiverId: myInfo.id,\r\n        });\r\n        dispatch(seenMessage({ _id: message[message.length - 1]._id }));\r\n      }\r\n    }\r\n    dispatch({\r\n      type: CLEAR_MESSAGE,\r\n    });\r\n  }, [message_get_success, currentFriend._id, dispatch, message, myInfo.id]);\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [message]);\r\n\r\n  const sendEmoji = (emo) => {\r\n    setNewMessage(`${newMessage}` + emo);\r\n    socket.current.emit(\"typingMessage\", {\r\n      senderId: myInfo.id,\r\n      receiverId: currentFriend._id,\r\n      msg: emo,\r\n    });\r\n  };\r\n\r\n  const sendImage = (e) => {\r\n    if (e.target.files.length !== 0) {\r\n      sendingSPlay();\r\n      const imageName = e.target.files[0].name;\r\n      const newImageName = Date.now() + imageName;\r\n\r\n      socket.current.emit(\"sendMessage\", {\r\n        senderId: myInfo.id,\r\n        senderName: myInfo.userName,\r\n        receiverId: currentFriend._id,\r\n        time: new Date(),\r\n        message: {\r\n          text: newMessage ? newMessage : \"\",\r\n          image: newImageName,\r\n        },\r\n      });\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"senderName\", myInfo.userName);\r\n      formData.append(\"imageName\", newImageName);\r\n      formData.append(\"receiverId\", currentFriend._id);\r\n      formData.append(\"image\", e.target.files[0]);\r\n      dispatch(sendImages(formData));\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    dispatch(userLogout());\r\n    socket.current.emit(\"logout\", myInfo.id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getTheme());\r\n  }, []);\r\n\r\n  const search = (e) => {\r\n    const getFriendClass = document.getElementsByClassName(\"hover-friend\");\r\n    const frienNameClass = document.getElementsByClassName(\"fd_name\");\r\n    for (var i = 0; i < getFriendClass.length, i < frienNameClass.length; i++) {\r\n      let text = frienNameClass[i].innerText.toLowerCase();\r\n      if (text.indexOf(e.target.value.toLowerCase()) > -1) {\r\n        getFriendClass[i].style.display = \"\";\r\n      } else {\r\n        getFriendClass[i].style.display = \"none\";\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={themeMode === \"dark\" ? \"messenger theme\" : \"messenger\"}>\r\n      <Toaster\r\n        position={\"top-right\"}\r\n        reverseOrder={false}\r\n        toastOptions={{\r\n          style: {\r\n            fontSize: \"18px\",\r\n          },\r\n        }}\r\n      />\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <div className=\"left-side\">\r\n            <div className=\"top\">\r\n              <div className=\"image-name\">\r\n                <div className=\"image\">\r\n                  <img src={`/image/${myInfo.image}`} alt=\"user\" />\r\n                </div>\r\n\r\n                <div className=\"name\">\r\n                  <h3>Hi {myInfo.userName}</h3>{\" \"}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"icons\">\r\n                <div onClick={() => setHide(!hide)} className=\"icon\">\r\n                  <FaEllipsisH />\r\n                </div>\r\n                <div className=\"icon\">\r\n                  <FaEdit />\r\n                </div>\r\n                <div className={hide ? \"theme_logout\" : \"theme_logout show\"}>\r\n                  <h3>Dark Mode</h3>\r\n                  <div className=\"on\">\r\n                    <label htmlFor=\"dark\">ON</label>\r\n                    <input\r\n                      onChange={(e) => dispatch(setTheme(e.target.value))}\r\n                      type=\"radio\"\r\n                      name=\"theme\"\r\n                      value=\"dark\"\r\n                      id=\"dark\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"off\">\r\n                    <label htmlFor=\"white\">OFF</label>\r\n                    <input\r\n                      onChange={(e) => dispatch(setTheme(e.target.value))}\r\n                      type=\"radio\"\r\n                      name=\"theme\"\r\n                      value=\"white\"\r\n                      id=\"white\"\r\n                    />\r\n                  </div>\r\n                  <div onClick={logout} className=\"logout\">\r\n                    <FaSignOutAlt /> Logout\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"friend-search\">\r\n              <div className=\"search\">\r\n                <button>\r\n                  <FaSistrix />{\" \"}\r\n                </button>\r\n                <input\r\n                  onChange={search}\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n            </div>\r\n            {/* <div className=\"active-friends\">\r\n              {activeUser && activeUser.length > 0\r\n                ? activeUser.map((usr) => (\r\n                    <ActiveFriend\r\n                      setCurrentFriend={setCurrentFriend}\r\n                      user={usr}\r\n                    />\r\n                  ))\r\n                : \"\"}\r\n            </div> */}\r\n            <div className=\"friends\">\r\n              {friends && friends.length > 0\r\n                ? friends.map((fd) => (\r\n                    <div\r\n                      onClick={() => setCurrentFriend(fd.frndInfo)}\r\n                      className={\r\n                        currentFriend._id === fd.frndInfo._id\r\n                          ? \"hover-friend active\"\r\n                          : \"hover-friend\"\r\n                      }\r\n                    >\r\n                      {/*console.log(fd)*/}\r\n\r\n                      <Friends\r\n                        activeUser={activeUser}\r\n                        myId={myInfo.id}\r\n                        friend={fd}\r\n                      />\r\n                    </div>\r\n                  ))\r\n                : \"No Friends\"}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {currentFriend ? (\r\n          <RightSide\r\n            message={message}\r\n            currentFriend={currentFriend}\r\n            inputHandle={inputHandle}\r\n            newMessage={newMessage}\r\n            sendMessage={sendMessage}\r\n            scrollRef={scrollRef}\r\n            sendEmoji={sendEmoji}\r\n            sendImage={sendImage}\r\n            activeUser={activeUser}\r\n            typingMessage={typingMessage}\r\n          />\r\n        ) : (\r\n          \"Select a friend\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messenger;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({children}) => {\r\n  const { authenticate } = useSelector((state) => state.auth);\r\n  return authenticate ? children : <Navigate to='/messenger/login'/>\r\n\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { userRegister } from \"../store/actions/authAction\";\r\nimport { ERROR_CLEAR, SUCCESS_MESSAGE_CLEAR } from \"../store/types/authType\";\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n  const alert = useAlert();\r\n  const {loading, authenticate, error, successMessage, myInfo} = useSelector((state)=> state.auth)\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState({\r\n    userName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    image: '',\r\n  });\r\n  const [imagePreview, setImagePreview] = useState('');\r\n  \r\n  const inputHandler = (e) => {\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const fileHandler = (e) => {\r\n    if (e.target.files.length !== 0) {\r\n      setState({\r\n        ...state,\r\n        [e.target.name]: e.target.files[0],\r\n      });\r\n    }\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      setImagePreview(reader.result);\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  const register = (e) => {\r\n    const {userName, email,password,confirmPassword,image} = state;\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    \r\n    formData.append('userName', userName);\r\n    formData.append('email', email);\r\n    formData.append('password', password);\r\n    formData.append('confirmPassword', confirmPassword);\r\n    formData.append('image', image);\r\n    dispatch(userRegister(formData));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (authenticate) {\r\n      navigate('/');\r\n    }\r\n    if (successMessage) {\r\n      alert.success(successMessage);\r\n      dispatch({type: SUCCESS_MESSAGE_CLEAR})\r\n    }\r\n    if (error) {\r\n      error.map(err=>alert.error(err));\r\n      dispatch({type: ERROR_CLEAR})\r\n    }\r\n\r\n  }, [successMessage,error])\r\n  \r\n  return (\r\n    <div>\r\n      <h1 className=\"register\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h3>Register</h3>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={register} action=''>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input\r\n                  onChange={inputHandler}\r\n                  name=\"userName\"\r\n                  value={state.userName}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Username\"\r\n                  id=\"username\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  onChange={inputHandler}\r\n                  name=\"email\"\r\n                  value={state.email}\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Email\"\r\n                  id=\"email\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  onChange={inputHandler}\r\n                  name=\"password\"\r\n                  value={state.password}\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"password\"\r\n                  id=\"password\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                <input\r\n                  onChange={inputHandler}\r\n                  name=\"confirmPassword\"\r\n                  value={state.confirmPassword}\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Confirm password\"\r\n                  id=\"confirmPassword\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"file-image\">\r\n                  <div className=\"image\">\r\n                    {imagePreview ? <img src={imagePreview} /> : ''}\r\n                  </div>\r\n                  <div className=\"file\">\r\n                    <label htmlFor=\"image\">Select Image</label>\r\n                    <input\r\n                      onChange={fileHandler}\r\n                      name=\"image\"\r\n                      type=\"file\"\r\n                      className=\"form-control\"\r\n                      id=\"image\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"submit\" className=\"btn\" value=\"register\" />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <span>\r\n                  {\" \"}\r\n                  <Link to=\"/messenger/login\">Login</Link>{\" \"}\r\n                </span>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport ForgotPassword from \"./components/ForgotPassword\";\nimport Login from \"./components/Login\";\nimport Messenger from \"./components/Messenger\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport Register from \"./components/Register\";\nimport ResetPassword from \"./components/ResetPassword\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Routes>\n          <Route path=\"/messenger/login\" element={ <Login/>}/>\n          <Route path=\"/messenger/register\" element={ <Register/>}/>\n          \n          <Route path=\"/\" element={<ProtectedRoute> <Messenger/></ProtectedRoute>}/>\n                  </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import {\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  SUCCESS_MESSAGE_CLEAR,\r\n  ERROR_CLEAR,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_SUCCESS,\r\n  LOGOUT_SUCCESS,\r\n  FORGOT_PASSWORD_FAIL,\r\n  FORGOT_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_FAIL,\r\n} from \"../types/authType\";\r\nimport deCodeToken from \"jwt-decode\";\r\n\r\nconst authState = {\r\n  loading: true,\r\n  authenticate: false,\r\n  error: \"\",\r\n  successMessage: \"\",\r\n  myInfo: \"\",\r\n  message: \"\",\r\n};\r\n\r\nconst tokenDecode = (token) => {\r\n  const tokenDecoded = deCodeToken(token);\r\n  const expTime = new Date(tokenDecoded.exp * 1000);\r\n  if (new Date() > expTime) {\r\n    return null;\r\n  }\r\n  return tokenDecoded;\r\n};\r\n\r\nconst getToken = localStorage.getItem(\"authToken\");\r\nif (getToken) {\r\n  const getInfo = tokenDecode(getToken);\r\n  if (getInfo) {\r\n    authState.myInfo = getInfo;\r\n    authState.authenticate = true;\r\n    authState.loading = false;\r\n  }\r\n}\r\nconsole.log(getToken);\r\n\r\nexport const authReducer = (state = authState, action) => {\r\n  const { payload, type } = action;\r\n\r\n  if (type === REGISTER_FAIL || type === USER_LOGIN_FAIL) {\r\n    return {\r\n      ...state,\r\n      error: payload.error,\r\n      authenticate: false,\r\n      myInfo: \"\",\r\n      loading: true,\r\n    };\r\n  }\r\n  if (type === REGISTER_SUCCESS || type === USER_LOGIN_SUCCESS) {\r\n    const myInfo = tokenDecode(payload.token);\r\n    return {\r\n      ...state,\r\n      myInfo: myInfo,\r\n      successMessage: payload.successMessage,\r\n      error: \"\",\r\n      authenticate: true,\r\n      loading: false,\r\n    };\r\n  }\r\n  if (type === SUCCESS_MESSAGE_CLEAR) {\r\n    return {\r\n      ...state,\r\n      successMessage: \"\",\r\n    };\r\n  }\r\n\r\n  if (type === ERROR_CLEAR) {\r\n    return {\r\n      ...state,\r\n      error: \"\",\r\n    };\r\n  }\r\n\r\n  if (type === \"LOGOUT_SUCCESS\") {\r\n    return {\r\n      ...state,\r\n      authenticate: false,\r\n      myInfo: \"\",\r\n      successMessage: \"Logout Successfull\",\r\n    };\r\n  }\r\n  return state;\r\n  // switch (action.type) {\r\n  //   case REGISTER_SUCCESS:\r\n  //   case USER_LOGIN_SUCCESS:\r\n\r\n  //     const myInfo = tokenDecode(payload.token);\r\n  //     return {\r\n  //       ...state,\r\n  //       loading: false,\r\n  //       authenticate: true,\r\n  //       myInfo: myInfo,\r\n  //       error: \"\",\r\n  //       successMessage: action.payload.successMessage,\r\n  //     };\r\n  //   case FORGOT_PASSWORD_SUCCESS:\r\n  //     return {\r\n  //       ...state,\r\n  //       message: action.payload\r\n  //     };\r\n  //   case REGISTER_FAIL:\r\n  //   case USER_LOGIN_FAIL:\r\n  //   case FORGOT_PASSWORD_FAIL:\r\n  //     return {\r\n  //       ...state,\r\n  //       loading: false,\r\n  //       authenticate: false,\r\n  //       myInfo: \"\",\r\n  //       error: action.payload.error,\r\n  //     };\r\n  //   case RESET_PASSWORD_FAIL:\r\n  //     return {\r\n  //       ...state,\r\n  //       error: action.payload,\r\n  //     };\r\n  //   case SUCCESS_MESSAGE_CLEAR:\r\n  //     return {\r\n  //       ...state,\r\n  //       successMessage: \"\",\r\n  //     };\r\n  //   case ERROR_CLEAR:\r\n  //     return {\r\n  //       ...state,\r\n  //       error: \"\",\r\n  //     };\r\n  //   case RESET_PASSWORD_SUCCESS:\r\n  //     return {\r\n  //       ...state,\r\n  //       successMessage: action.payload\r\n  //     }\r\n  //   case LOGOUT_SUCCESS:\r\n  //     return {\r\n  //       ...state,\r\n  //       authenticate: false,\r\n  //       myInfo: '',\r\n  //       successMessage: 'Logout Success'\r\n  //     };\r\n  //   default:\r\n  //     return state;\r\n  // }\r\n};\r\n","import { LOGOUT_SUCCESS } from \"../types/authType\";\r\nimport {\r\n  CLEAR_MESSAGE,\r\n  DELIVERED_MESSAGE,\r\n  FRIEND_GET_SUCCESS,\r\n  GET_MESSAGE_SUCCESS,\r\n  GET_THEME_SUCCESS,\r\n  SEEN_ALL,\r\n  SEEN_MESSAGE,\r\n  SEND_MESSAGE_SUCCESS,\r\n  SET_THEME_SUCCESS,\r\n  SOCKET_MESSAGE,\r\n  UPDATE,\r\n  UPDATE_FRIEND_MESSAGE,\r\n} from \"../types/messengerType\";\r\n\r\nconst messengerState = {\r\n  friends: [],\r\n  message: [],\r\n  messageSendSuccess: false,\r\n  message_get_success: false,\r\n  themeMode: \"\",\r\n};\r\n\r\nexport const messengerReducer = (state = messengerState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  if (type === GET_THEME_SUCCESS || type === SET_THEME_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      themeMode: payload.theme,\r\n    };\r\n  }\r\n\r\n  if (type === FRIEND_GET_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      friends: payload.friends,\r\n    };\r\n  }\r\n\r\n  if (type === GET_MESSAGE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      message_get_success: true,\r\n      message: payload.message,\r\n    };\r\n  }\r\n\r\n  if (type === SEND_MESSAGE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      messageSendSuccess: true,\r\n      message: [...state.message, payload.message],\r\n    };\r\n  }\r\n  if (type === SOCKET_MESSAGE) {\r\n    return {\r\n      ...state,\r\n      message: [...state.message, payload.message],\r\n    };\r\n  }\r\n  if (type === UPDATE_FRIEND_MESSAGE) {\r\n    const index = state.friends.findIndex(\r\n      (f) =>\r\n        f.frndInfo._id === payload.msgInfo.receiverId ||\r\n        f.frndInfo._id === payload.msgInfo.senderId\r\n    );\r\n    state.friends[index].msgInfo = payload.msgInfo;\r\n    state.friends[index].msgInfo.status = payload.status;\r\n    return state;\r\n  }\r\n  if (type === CLEAR_MESSAGE) {\r\n    return {\r\n      ...state,\r\n      messageSendSuccess: false,\r\n      message_get_success: false, ///can be separated\r\n    };\r\n  }\r\n  if (type === SEEN_MESSAGE) {\r\n    const index = state.friends.findIndex(\r\n      (f) =>\r\n        f.frndInfo._id === payload.msgInfo.receiverId ||\r\n        f.frndInfo._id === payload.msgInfo.senderId\r\n    );\r\n    state.friends[index].msgInfo.status = \"seen\";\r\n    return {\r\n      ...state,\r\n    };\r\n  }\r\n  if (type === DELIVERED_MESSAGE) {\r\n    const index = state.friends.findIndex(\r\n      (f) =>\r\n        f.frndInfo._id === payload.msgInfo.receiverId ||\r\n        f.frndInfo._id === payload.msgInfo.senderId\r\n    );\r\n    state.friends[index].msgInfo.status = \"delivered\";\r\n    return {\r\n      ...state,\r\n    };\r\n  }\r\n  if (type === UPDATE) {\r\n    const index = state.friends.findIndex((f) => f.frndInfo._id === payload.id);\r\n    if (state.friends[index].msgInfo) {\r\n      state.friends[index].msgInfo.status = \"seen\";\r\n    }\r\n    return {\r\n      ...state,\r\n    };\r\n  }\r\n  if (type === SEEN_ALL) {\r\n    const index = state.friends.findIndex(\r\n      (f) => f.frndInfo._id === payload.receiverId\r\n    );\r\n    state.friends[index].msgInfo.status = \"seen\";\r\n    return {\r\n      ...state,\r\n    };\r\n  }\r\n  if (type === LOGOUT_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      friends: [],\r\n      message: [],\r\n      messageSendSuccess: false,\r\n      message_get_success: false,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n","import {legacy_createStore as createStore, compose, combineReducers, applyMiddleware} from 'redux';\r\n\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { authReducer } from './reducers/authReducer';\r\nimport { messengerReducer } from './reducers/messengerReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    messenger: messengerReducer\r\n})\r\n\r\nconst middleware = [thunkMiddleware]\r\nconst store = createStore(rootReducer, compose(applyMiddleware(...middleware),\r\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./main.scss\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index.js\";\n\nimport { positions, transitions, Provider as AlertProvider } from \"react-alert\";\nimport alertTemplate from \"react-alert-template-basic\";\n\nconst options = {\n  timeout: 5000,\n  positions: positions.BOTTOM_CENTER,\n  transitions: transitions.SCALE,\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AlertProvider template={alertTemplate} {...options}>\n        <App />\n      </AlertProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}